<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- properties (constants) -->
  <xacro:property name="ns" value="p3dx" />

  <!-- ros_control plugin -->
  <!-- <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/${ns}</robotNamespace>
    </plugin>
  </gazebo> -->

  <!-- base_link -->
	<gazebo reference="base_link">
		<material>Gazebo/Red</material>
	</gazebo>

  <!-- top_plate -->
  <gazebo reference="top_plate">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <!-- swivel -->
  <gazebo reference="swivel">
    <material>Gazebo/Grey</material>
  </gazebo>
  
  <!-- center_hubcap -->
	<gazebo reference="center_hubcap">
		<material>Gazebo/Grey</material>
	</gazebo>
  
  <!-- center_wheel -->
	<gazebo reference="center_wheel">
		<material>Gazebo/Black</material>
		<mu1>10.0</mu1>
		<mu2>10.0</mu2>
		<kp>1000000.0</kp>
		<kd>1.0</kd>
	</gazebo>
  
  <!-- front_sonar -->  

   <gazebo reference="front_sonar">
   	<material>Gazebo/Yellow</material>
   </gazebo>

  <!-- differential drive -->
	<gazebo>
		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
		  	<always_on>true</always_on>
			<update_rate>40</update_rate>
			<legacy_mode>false</legacy_mode>
			<left_joint>base_right_wheel_joint</left_joint>
			<right_joint>base_left_wheel_joint</right_joint>
			<wheel_separation>0.39</wheel_separation>
			<wheel_diameter>0.15</wheel_diameter>
			<torque>5</torque>
			<command_topic>cmd_vel</command_topic>
			<odometry_topic>odom</odometry_topic>
			<odometry_frame>odom</odometry_frame>
			<robot_base_frame>base_link</robot_base_frame>
			<publish_wheel_tf>false</publish_wheel_tf>
			<publish_wheel_joint_state>false</publish_wheel_joint_state>
			<ros_debug_level>na</ros_debug_level>
			<wheel_acceleration>0</wheel_acceleration>
			<wheel_torque>5</wheel_torque>
			<odometry_source>1</odometry_source>
			<publish_tf>1</publish_tf>
		</plugin>
	</gazebo>

  <!-- ground truth -->
	<gazebo>
		<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
			<always_on>true</always_on>
			<update_rate>100.0</update_rate>
			<body_name>base_link</body_name>
			<topic_name>${ns}/base_pose_ground_truth</topic_name>
			<gaussian_noise>0.01</gaussian_noise>
			<frame_name>map</frame_name>
			<!-- initialize odometry for fake localization -->
			<xyz_offset>0 0 0</xyz_offset>
			<rpy_offset>0 0 0</rpy_offset>
		</plugin>
	</gazebo>	
	
	<!-- lms100 -->
	<gazebo reference="lms100">
		<sensor type="ray" name="head_hokuyo_sensor">
			<pose>0 0 0 0 0 0</pose>
			<visualize>false</visualize>
			<update_rate>50</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>360</samples>
						<resolution>1</resolution>
						<min_angle>-1.570796</min_angle>
						<max_angle>1.570796</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.10</min>
					<max>30.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
				<topic_name>${ns}/laser/scan</topic_name>
				<frame_name>lms100</frame_name>
			</plugin>
		</sensor>
	</gazebo>
  
</robot>